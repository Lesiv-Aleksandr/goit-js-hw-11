{"version":3,"sources":["index.js"],"names":[],"mappings":";;;AACA,aAAA,QAAA","file":"src.a59baeaf.js","sourceRoot":"../src","sourcesContent":["\nimport './sass/main.scss';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import getPixabay from './moduleJS/fetchPixabay.js';\n// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n// import { option } from './moduleJS/fetchPixabay.js';\n\n// const inpuSearchForm = document.querySelector('#search-form');\n// const galleryRef = document.querySelector('.gallery');\n// const btnSearch = document.querySelector('.search__button');\n// const inputValue = document.querySelector(\"[type='text']\");\n// const loadBtn = document.querySelector('.load-button');\n// const header = document.querySelector(\".header\");\n// const main = document.querySelector(\".main\");\n\n//     let modalGallery = null;\n//     main.style.paddingTop = `${header.clientHeight + 20}px`;\n\n    \n    \n//     inpuSearchForm.addEventListener(\"submit\", onGetImages);\n    \n//     async function onGetImages(e) {\n//       e.preventDefault();\n//       btnSearch.setAttribute(\"disabled\", true);\n//         try {\n//           option.userQuery = inputValue.value;\n//           option.pageNumber = 1;\n    \n//             if (option.userQuery === \"\") {\n//               Notify.info(\"Please, fill in the input field\");\n//               return;\n//             }\n    \n//                   const { hits, totalHits } = await getPixabay();\n//                   galleryRef.innerHTML = \"\";\n              \n//                       if (hits.length === 0) {\n//                         Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\");\n//                         return;\n//                       }\n    \n//         additionGallery(hits);\n//               Notify.success(`Hooray! We found ${totalHits} images.`);\n//                   loadBtn.classList.remove(\"is-hidden\");\n//                     const perPage = 40;\n//                     modalGallery = modalShow(\".gallery a\");\n\n//                         if (totalHits / perPage < option.pageNumber) {\n//                           loadBtn.classList.add(\"is-hidden\");\n//                           return Notify.info(\"We're sorry, but you've reached the end of search results.\");\n//                         }\n    \n//                   option.pageNumber += 1;\n//                 } catch (error) {\n//                   console.log(error);\n//                 } finally {\n//                   btnSearch.removeAttribute(\"disabled\");\n//                 }\n//           }\n    \n//     function additionGallery(hits) {\n//       galleryRef.insertAdjacentHTML(\"beforeend\", galleryMarkupTamplate(hits));\n//     }\n    \n//     function galleryMarkupTamplate(hits) {\n//       return hits.map(Properties).join(\"\");\n//     }\n    \n//     function Properties({\n//       webformatURL,\n//       largeImageURL,\n//       tags,\n//       likes,\n//       views,\n//       comments,\n//       downloads,\n//     }) {\n//       return `\n//       <li class=\"gallery__item\">\n//       <div class=\"gallery__card\">\n//       <a class=\"gallery__link\" href='${largeImageURL}'>\n//       <div class=\"gallery__photo-thumb\">\n//       <img class=\"gallery__image\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" decoding=\"async\"/>\n//       </div>\n//       </a>\n//       <ul class=\"gallery__info\">\n//         <li class=\"gallery__info-item\">\n//           <b>Likes</b> <span>${likes}</span>\n//         </li>\n//         <li class=\"gallery__info-item\">\n//           <b>Views</b> <span>${views}</span>\n//         </li>\n//         <li class=\"gallery__info-item\">\n//           <b>Comments</b> <span>${comments}</span>\n//         </li>\n//         <li class=\"gallery__info-item\">\n//           <b>Downloads</b> <span>${downloads}</span>\n//         </li>\n//       </ul>\n//       </div>\n//     </li>`;\n//     }\n    \n//     loadBtn.addEventListener(\"click\", onLoadMoreImages);\n  \n//     async function onLoadMoreImages(event) {\n//       loadBtn.classList.add(\"is-hidden\");\n//       const { hits, totalHits } = await getPixabay();\n//       additionGallery(hits);\n//       modalGallery.refresh();\n//       smoothScroll();\n//       const perPage = 40;\n//       if (totalHits / perPage < option.pageNumber) {\n//         loadBtn.classList.add(\"is-hidden\");\n//         return Notify.info(\"We're sorry, but you've reached the end of search results.\");\n//       }\n//       loadBtn.classList.remove(\"is-hidden\");\n//       option.pageNumber += 1;\n//     }\n    \n//     galleryRef.addEventListener(\"click\", onImageClick);\n//     function onImageClick(event) {\n//       event.preventDefault();\n//     }\n    \n//     function smoothScroll() {\n//       const { height: cardHeight } = document\n//         .querySelector(\".gallery\")\n//         .firstElementChild.getBoundingClientRect();\n    \n//       window.scrollBy({\n//         top: cardHeight * 2,\n//         behavior: \"smooth\",\n//       });\n//     }\n    \n//     function modalShow(selector) {\n//       const modalGallery = selector;\n//       const modalOptions = {\n//         captionsData: \"alt\",\n//         animationSpeed: 180,\n//         fadeSpeed: 250,\n//       };\n    \n//       return new SimpleLightbox(modalGallery, modalOptions);\n//     }"]}